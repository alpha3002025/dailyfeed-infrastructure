apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.appName }}
  name: {{ .Values.appName }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  strategy: 
    type: RollingUpdate
  template:
    metadata:
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "false"
      labels:
        app: {{ .Values.appName }}
    spec:
      containers:
      - image: alpha300uk/{{ .Values.appName }}-svc:{{ .Values.imageTag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        name: {{ .Values.appName }}
        ports:
        - containerPort: {{ .Values.portNumber }}
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: {{ .Values.profile }}
        - name: SERVER_PORT
          value: "{{ .Values.portNumber }}"
        - name: MYSQL_JDBC_URL
          value: "jdbc:mysql://mysql.infra.svc.cluster.local:3306/dailyfeed?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8"
        - name: MYSQL_USERNAME
          value: "dailyfeed"
        - name: MYSQL_PASSWORD
          value: "hitEnter###"
        - name: MYSQL_SCHEMA
          value: "dailyfeed"
        - name: REDIS_HOST
          value: "redis-master.infra.svc.cluster.local"
        - name: REDIS_PORT
          value: "6379"
        {{- with .Values.envValues }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.debugValues}}
        {{- with .Values.debugValues}}
        {{- toYaml . | nindent 8 }}
        {{- end}}
        {{- end}}
        {{- if .Values.configSecretItems}}
        envFrom:
          {{- range .Values.configSecretItems }}
          - configMapRef:
              name: {{ . | trimSuffix "-nosecret" }}-config
          {{- if not (hasSuffix "-nosecret" .)}}
          - secretRef:
              name: {{ . }}-secret
          {{- end}}
          {{- end}}
        {{- end}}
        resources: 
          requests:
            memory: {{ .Values.resources.memory.requests }}
            cpu: {{ .Values.resources.cpu.requests }}
          limits:
            memory: {{ .Values.resources.memory.limits }}
            cpu: {{ .Values.resources.cpu.limits }}
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 10"]
        {{- with .Values.porbeValues.readiness }}
        readinessProbe:
          httpGet:
            path: {{ .httpGetPath }}
            port: {{ $.Values.portNumber }}
          initialDelaySeconds: {{ .initialDelaySeconds }}
          periodSeconds: {{ .periodSeconds }}
          successThreshold: {{ .successThreshold }}
          failureThreshold: {{ .failureThreshold }}
        {{- end }}
        {{- with .Values.porbeValues.liveness }}
        livenessProbe:
          httpGet:
            path: {{ .httpGetPath }}
            port: {{ $.Values.portNumber }}
          initialDelaySeconds: {{ .initialDelaySeconds }}
          periodSeconds: {{ .periodSeconds }}
          failureThreshold: {{ .failureThreshold }}
        {{- end}}
        {{- with .Values.porbeValues.startup}}
        startupProbe:
          httpGet:
            path: {{ .httpGetPath }}
            port: {{ $.Values.portNumber }}
          initialDelaySeconds: {{ .initialDelaySeconds }}
          periodSeconds: {{ .periodSeconds }}
          failureThreshold: {{ .failureThreshold }}
        {{- end}}
        {{- if .Values.persistence }}
        {{- if .Values.persistence.enabled }}
        volumeMounts:
        - name: image-storage
          mountPath: {{ .Values.persistence.mountPath }}
        {{- end }}
        {{- end }}
      {{- if .Values.persistence }}
      {{- if .Values.persistence.enabled }}
      volumes:
      - name: image-storage
        persistentVolumeClaim:
          claimName: {{ .Values.appName }}-claim
      {{- end }}
      {{- end }}
status: {}